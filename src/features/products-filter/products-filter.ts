import CommonBuilderWrapper from '../../shared/lib/common-builder-wrapper';import './products-filter.scss';import ElementBuilder from '../../shared/lib/element-builder';import Input from '../../shared/ui/input/input';import Dropdown, { DropdownType } from '../../shared/ui/dropdown/dropdown';import { CATALOG_ITEMS } from './products-filter.model';export default class ProductsFilter extends CommonBuilderWrapper {  constructor() {    super();    this.builder = new ElementBuilder({      tag: 'div',      styleClass: 'products-filter',    });    this.builder.append([this.getCatalogField().getElement(), this.getPriceField().getElement()]);  }  private getCatalogField(): ElementBuilder {    const catalogFieldBuilder = new ElementBuilder({      tag: 'div',    });    const fieldName = new ElementBuilder({      tag: 'div',      content: 'Catalog',      styleClass: 'products-filter__field-title',    });    const catalogDropdown = new Dropdown({      type: DropdownType.DEFAULT,      items: CATALOG_ITEMS,      selectedItemIndex: 0,    });    catalogFieldBuilder.append([fieldName.getElement(), catalogDropdown.getElement()]);    return catalogFieldBuilder;  }  private getPriceField(): ElementBuilder {    const priceFieldBuilder = new ElementBuilder({      tag: 'div',    });    const fieldName = new ElementBuilder({      tag: 'div',      content: 'Price, $',      styleClass: 'products-filter__field-title',    });    const inputFrom = new Input({      type: 'number',      styleClass: 'products-filter__price-input',      placeholder: 'From',    });    const inputTo = new Input({      type: 'number',      styleClass: 'products-filter__price-input',      placeholder: 'To',    });    const separator = new ElementBuilder({      tag: 'span',      content: 'â€”',    });    const inputWrapper = new ElementBuilder({      tag: 'div',      styleClass: 'products-filter__price-input-wrapper',    });    inputWrapper.append([inputFrom.getElement(), separator.getElement(), inputTo.getElement()]);    priceFieldBuilder.append([fieldName.getElement(), inputWrapper.getElement()]);    return priceFieldBuilder;  }}